[{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:15.095Z","before":[{"result":{"duration":565092400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Verify that the user deletion operation is successful with existing userFirstName","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-user-deletion-operation-is-successful-with-existing-userfirstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":6003000,"status":"passed"},"line":4,"name":"The userFirstName exists already","match":{"location":"StepDefinition.Delete_UserFirstName.the_user_first_name_exists_already()"},"keyword":"Given "},{"result":{"duration":2666063100,"status":"passed"},"line":5,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat StepDefinition.Delete_UserFirstName.user_receives_200_ok_status(Delete_UserFirstName.java:32)\r\n\tat âœ½.User receives 200 OK status with success message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Delete_UserFirstname.feature:6)\r\n","duration":17000400,"status":"failed"},"line":6,"name":"User receives 200 OK status with success message","match":{"location":"StepDefinition.Delete_UserFirstName.user_receives_200_ok_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:18.484Z","before":[{"result":{"duration":1000400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Verify that the user deletion operation again after successful deletion with same userFirstName","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-user-deletion-operation-again-after-successful-deletion-with-same-userfirstname","after":[{"result":{"duration":997700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"The userFirstName is already deleted","match":{"location":"StepDefinition.Delete_UserFirstName.the_user_first_name_is_already_deleted()"},"keyword":"Given "},{"result":{"duration":377911700,"status":"passed"},"line":10,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":992900,"status":"passed"},"line":11,"name":"User receives 404 Not Found error with message","match":{"location":"StepDefinition.Delete_UserFirstName.user_receives_404_not_found_error()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:18.880Z","before":[{"result":{"duration":999300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Verify userFirstName in response is deleted with requested userFirstName","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-userfirstname-in-response-is-deleted-with-requested-userfirstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"The userFirstName is already deleted","match":{"location":"StepDefinition.Delete_UserFirstName.the_user_first_name_is_already_deleted()"},"keyword":"Given "},{"result":{"duration":378880700,"status":"passed"},"line":15,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":524986700,"status":"passed"},"line":16,"name":"Response body contains the same userFirstName as requested","match":{"location":"StepDefinition.Delete_UserFirstName.validate_deleted_user_first_name_in_response()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:19.797Z","before":[{"result":{"duration":999600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Verify that the user deletion operation with invalid userFirstName (alphanumeric and special characters)","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-user-deletion-operation-with-invalid-userfirstname-(alphanumeric-and-special-characters)","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"User enters userFirstName with combination of number, alphabet and special characters","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_invalid_user_firstname_combo()"},"keyword":"Given "},{"result":{"duration":368799300,"status":"passed"},"line":20,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":11008500,"status":"passed"},"line":21,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:20.190Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Verify that the userFirstName deletion operation with only special characters","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-only-special-characters","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1024900,"status":"passed"},"line":24,"name":"User enters userFirstName with only special characters","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_only_special_characters()"},"keyword":"Given "},{"result":{"duration":365301600,"status":"passed"},"line":25,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":18005400,"status":"passed"},"line":26,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:20.593Z","before":[{"result":{"duration":996200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Verify that the userFirstName deletion operation with only digits","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-only-digits","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2024300,"status":"passed"},"line":29,"name":"User enters userFirstName with only 5 digits","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_digits_only()"},"keyword":"Given "},{"result":{"duration":382679600,"status":"passed"},"line":30,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":10025700,"status":"passed"},"line":31,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:20.999Z","before":[{"result":{"duration":1002900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Verify that the userFirstName deletion operation with non-existent/invalid userFirstName","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-non-existent/invalid-userfirstname","after":[{"result":{"duration":1000200,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":34,"name":"User enters userFirstName with non-existent userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_non_existent_userFirstName()"},"keyword":"Given "},{"result":{"duration":375780700,"status":"passed"},"line":35,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":11022100,"status":"passed"},"line":36,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:21.402Z","before":[{"result":{"duration":999100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Verify that the userFirstName deletion operation with zero value","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-zero-value","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1005000,"status":"passed"},"line":39,"name":"User enters userFirstName with zero value","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_zero_value()"},"keyword":"Given "},{"result":{"duration":477177500,"status":"passed"},"line":40,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":15525000,"status":"passed"},"line":41,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:21.913Z","before":[{"result":{"duration":2005900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Verify that the userFirstName deletion operation with negative integer value","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-negative-integer-value","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":992100,"status":"passed"},"line":44,"name":"User enters userFirstName with negative integer value","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_negative_value()"},"keyword":"Given "},{"result":{"duration":456118400,"status":"passed"},"line":45,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":9008400,"status":"passed"},"line":46,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:22.392Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":48,"name":"Verify that the userFirstName deletion operation with out of range value","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-that-the-userfirstname-deletion-operation-with-out-of-range-value","after":[{"result":{"duration":1001900,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000600,"status":"passed"},"line":49,"name":"User enters userFirstName with out of range value","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_out_of_range_value()"},"keyword":"Given "},{"result":{"duration":350944200,"status":"passed"},"line":50,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":26681200,"status":"passed"},"line":51,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:22.785Z","before":[{"result":{"duration":1002600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":53,"name":"Verify the userFirstName deletion operation with invalid BaseURL","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-the-userfirstname-deletion-operation-with-invalid-baseurl","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":997200,"status":"passed"},"line":54,"name":"User enters userFirstName with invalid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_invalid_baseurl()"},"keyword":"Given "},{"result":{"duration":765373500,"status":"passed"},"line":55,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"status":"passed"},"line":56,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:23.561Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":58,"name":"Verify the userFirstName deletion operation with invalid Endpoint","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-the-userfirstname-deletion-operation-with-invalid-endpoint","after":[{"result":{"duration":998900,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":357015300,"status":"passed"},"line":59,"name":"User enters userFirstName with valid BaseURL and invalid Endpoint","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_invalid_endpoint()"},"keyword":"Given "},{"result":{"duration":442001500,"status":"passed"},"line":60,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":32521100,"status":"passed"},"line":61,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:24.417Z","before":[{"result":{"duration":1998100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":63,"name":"Verify the userFirstName deletion operation with empty Endpoint","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios;verify-the-userfirstname-deletion-operation-with-empty-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":367655000,"status":"passed"},"line":64,"name":"User enters userFirstName with valid BaseURL and empty Endpoint","match":{"location":"StepDefinition.Delete_UserFirstName.user_enters_empty_endpoint()"},"keyword":"Given "},{"result":{"duration":350373100,"status":"passed"},"line":65,"name":"User sends DELETE request to delete the respective userFirstName","match":{"location":"StepDefinition.Delete_UserFirstName.send_delete_request_by_user_first_name()"},"keyword":"When "},{"result":{"duration":19002600,"status":"passed"},"line":66,"name":"User receives 404 Not Found error with userFirstName message","match":{"location":"StepDefinition.Delete_UserFirstName.validate_404_for_invalid_userFirstName()"},"keyword":"Then "}]}],"name":"User Deletion API by userFirstName - DELETE Request Scenarios","description":"","id":"user-deletion-api-by-userfirstname---delete-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Delete_UserFirstname.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:25.182Z","before":[{"result":{"duration":2990400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Verify that the user deletion operation is successful with existing userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-is-successful-with-existing-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":996300,"status":"passed"},"line":4,"name":"The userID exists already","match":{"location":"StepDefinition.Delete_UserId.the_user_id_exists_already()"},"keyword":"Given "},{"result":{"duration":492043000,"status":"passed"},"line":5,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [200] but found [404]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat StepDefinition.Delete_UserId.user_receives_200_ok_status(Delete_UserId.java:38)\r\n\tat âœ½.User receives 200 OK status with the success message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Delete_Userid.feature:6)\r\n","duration":997400,"status":"failed"},"line":6,"name":"User receives 200 OK status with the success message","match":{"location":"StepDefinition.Delete_UserId.user_receives_200_ok_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:25.696Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Verify that the user deletion operation again after successful deletion with same userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-again-after-successful-deletion-with-same-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"The userID is already deleted","match":{"location":"StepDefinition.Delete_UserId.user_id_is_already_deleted()"},"keyword":"Given "},{"result":{"duration":358506700,"status":"passed"},"line":10,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"duration":1995600,"status":"passed"},"line":11,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:26.082Z","before":[{"result":{"duration":3014100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Verify userID in response is deleted with requested userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-userid-in-response-is-deleted-with-requested-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"The userID is already deleted","match":{"location":"StepDefinition.Delete_UserId.user_id_is_already_deleted()"},"keyword":"Given "},{"result":{"duration":395424300,"status":"passed"},"line":15,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"duration":21526000,"status":"passed"},"line":16,"name":"Response body contains the same user_id as requested","match":{"location":"StepDefinition.Delete_UserId.response_body_contains_requested_user_id()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:26.521Z","before":[{"result":{"duration":1523700,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Verify that the user deletion operation with invalid userID (alphanumeric and special characters)","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-invalid-userid-(alphanumeric-and-special-characters)","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1071600,"status":"passed"},"line":19,"name":"User enters userID with combination of number, alphabet and special characters","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_alphanumeric_special_chars()"},"keyword":"Given "},{"result":{"duration":299457300,"status":"passed"},"line":20,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:26.837Z","before":[{"result":{"duration":2557300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Verify that the user deletion operation with invalid userID (only special characters)","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-invalid-userid-(only-special-characters)","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":24,"name":"User enters userID with only special characters","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_special_chars_only()"},"keyword":"Given "},{"result":{"duration":349334200,"status":"passed"},"line":25,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":26,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:27.222Z","before":[{"result":{"duration":15898800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Verify that the user deletion operation with non-existent userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-non-existent-userid","after":[{"result":{"duration":334500,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"User enters userID with 5 invalid digits","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_invalid_digits()"},"keyword":"Given "},{"result":{"duration":345104100,"status":"passed"},"line":30,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":31,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:27.611Z","before":[{"result":{"duration":2338800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Verify that the user deletion operation with blank userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-blank-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":998500,"status":"passed"},"line":34,"name":"User enters userID with nothing (blank)","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_blank()"},"keyword":"Given "},{"result":{"duration":384157600,"status":"passed"},"line":35,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"duration":801000,"status":"passed"},"line":36,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:28.025Z","before":[{"result":{"duration":7078600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Verify that the user deletion operation with zero value userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-zero-value-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1173000,"status":"passed"},"line":39,"name":"User enters userID with zero value","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_zero()"},"keyword":"Given "},{"result":{"duration":477274700,"status":"passed"},"line":40,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"duration":15780200,"status":"passed"},"line":41,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:28.543Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Verify that the user deletion operation with negative integer userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-negative-integer-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"User enters userID with negative value","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_negative_value()"},"keyword":"Given "},{"result":{"duration":380294200,"status":"passed"},"line":45,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":46,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:28.939Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":48,"name":"Verify that the user deletion operation with out of range userID","description":"","id":"user-deletion-api---delete-request-scenarios;verify-that-the-user-deletion-operation-with-out-of-range-userid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":49,"name":"User enters userID with out of range value","match":{"location":"StepDefinition.Delete_UserId.user_enters_userid_with_out_of_range()"},"keyword":"Given "},{"result":{"duration":365667700,"status":"passed"},"line":50,"name":"User sends DELETE request to delete the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_request_with_existing_user_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":51,"name":"User receives 400 Bad Request with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_400_bad_request_with_the_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:29.318Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":53,"name":"Verify the user deletion operation with invalid BaseURL","description":"","id":"user-deletion-api---delete-request-scenarios;verify-the-user-deletion-operation-with-invalid-baseurl","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":54,"name":"User enters userID with invalid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Delete_UserId.user_enters_invalid_baseurl()"},"keyword":"Given "},{"result":{"duration":274731300,"status":"passed"},"line":55,"name":"User sends DELETE request with the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_with_invalid_baseurl_or_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":56,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:29.632Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":58,"name":"Verify the user deletion operation with invalid Endpoint","description":"","id":"user-deletion-api---delete-request-scenarios;verify-the-user-deletion-operation-with-invalid-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":59,"name":"User enters userID with valid BaseURL and invalid Endpoint","match":{"location":"StepDefinition.Delete_UserId.user_enters_valid_baseurl_invalid_endpoint()"},"keyword":"Given "},{"result":{"duration":348992200,"status":"passed"},"line":60,"name":"User sends DELETE request with the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_with_invalid_baseurl_or_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":61,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:29.995Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":63,"name":"Verify the user deletion operation with empty Endpoint","description":"","id":"user-deletion-api---delete-request-scenarios;verify-the-user-deletion-operation-with-empty-endpoint","after":[{"result":{"duration":1005000,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":64,"name":"User enters userID with valid BaseURL and empty Endpoint","match":{"location":"StepDefinition.Delete_UserId.user_enters_valid_baseurl_empty_endpoint()"},"keyword":"Given "},{"result":{"duration":439262600,"status":"passed"},"line":65,"name":"User sends DELETE request with the respective userID","match":{"location":"StepDefinition.Delete_UserId.user_sends_delete_with_invalid_baseurl_or_endpoint()"},"keyword":"When "},{"result":{"status":"passed"},"line":66,"name":"User receives 404 Not Found error with the message","match":{"location":"StepDefinition.Delete_UserId.user_receives_404_not_found()"},"keyword":"Then "}]}],"name":"User Deletion API - DELETE Request Scenarios","description":"","id":"user-deletion-api---delete-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Delete_Userid.feature","tags":[]},{"line":2,"elements":[{"start_timestamp":"2025-06-13T18:07:30.448Z","before":[{"result":{"duration":2017800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":4,"name":"Get User by valid FirstName","description":"","id":"get-user-by-firstname-api---get-request-scenarios;get-user-by-valid-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2009100,"status":"passed"},"line":5,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":360887900,"status":"passed"},"line":6,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"status":"passed"},"line":7,"name":"User receives 200 OK status with user details in response","match":{"location":"StepDefinition.Get_UserName.validate_200_status_with_user_details()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:30.840Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":9,"name":"Validate FirstName in Response Matches Requested FirstName","description":"","id":"get-user-by-firstname-api---get-request-scenarios;validate-firstname-in-response-matches-requested-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":10,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":370960600,"status":"passed"},"line":11,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"duration":50581700,"status":"passed"},"line":12,"name":"Response body contains same UserfirstName as requested","match":{"location":"StepDefinition.Get_UserName.response_body_contains_requested_firstname()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:31.271Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":14,"name":"Validate Response Body Content-Type is JSON","description":"","id":"get-user-by-firstname-api---get-request-scenarios;validate-response-body-content-type-is-json","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":15,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":377923300,"status":"passed"},"line":16,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"status":"passed"},"line":17,"name":"Response Content-Type is JSON with status code 200 OK","match":{"location":"StepDefinition.Get_UserName.response_content_type_is_json()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:31.724Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":19,"name":"Validate Required Fields in Response","description":"","id":"get-user-by-firstname-api---get-request-scenarios;validate-required-fields-in-response","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":409715700,"status":"passed"},"line":21,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"duration":315864000,"status":"passed"},"line":22,"name":"Response contains user details: user_id, UserfirstName, UserlastName, userContactNumber, userEmailId, creationTime, lastModTime, userAddress, addressId, plotNumber, street, state, country, zipCode","match":{"location":"StepDefinition.Get_UserName.response_contains_required_fields()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:32.465Z","before":[{"result":{"duration":3009800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":24,"name":"Validate FirstName is String Type","description":"","id":"get-user-by-firstname-api---get-request-scenarios;validate-firstname-is-string-type","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":25,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":396294400,"status":"passed"},"line":26,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"duration":45840800,"status":"passed"},"line":27,"name":"UserfirstName in response is of string type","match":{"location":"StepDefinition.Get_UserName.userfirstname_is_string_type()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:32.928Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":29,"name":"Validate address_id is integer type in response","description":"","id":"get-user-by-firstname-api---get-request-scenarios;validate-address-id-is-integer-type-in-response","after":[{"result":{"duration":2012300,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":30,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_valid_firstname()"},"keyword":"Given "},{"result":{"duration":366797700,"status":"passed"},"line":31,"name":"User sends GET request with existing user FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_request_with_valid_firstname()"},"keyword":"When "},{"result":{"duration":24515800,"status":"passed"},"line":32,"name":"address_id is of integer type","match":{"location":"StepDefinition.Get_UserName.address_id_is_integer_type()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:33.327Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":34,"name":"Get User with Non-Existing FirstName","description":"","id":"get-user-by-firstname-api---get-request-scenarios;get-user-with-non-existing-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":35,"name":"User prepares GET request with BaseURL, valid endpoint, and non-existing FirstName","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_non_existing_firstname()"},"keyword":"Given "},{"result":{"duration":359178100,"status":"passed"},"line":36,"name":"User sends GET request with non-existent FirstName","match":{"location":"StepDefinition.Get_UserName.send_get_with_non_existent_firstname()"},"keyword":"When "},{"result":{"status":"passed"},"line":37,"name":"User receives 404 Not Found status with the error message","match":{"location":"StepDefinition.Get_UserName.validate_404_response()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:33.701Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":39,"name":"Get User with Invalid FirstName Format (e.g. integer instead of string)","description":"","id":"get-user-by-firstname-api---get-request-scenarios;get-user-with-invalid-firstname-format-(e.g.-integer-instead-of-string)","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":40,"name":"User prepares GET request with BaseURL, valid endpoint, and invalid FirstName as 123","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_with_integer_firstname()"},"keyword":"Given "},{"result":{"duration":451197700,"status":"passed"},"line":41,"name":"User sends GET request with invalid FirstName 123","match":{"location":"StepDefinition.Get_UserName.send_get_with_integer_firstname()"},"keyword":"When "},{"result":{"duration":999300,"status":"passed"},"line":42,"name":"User receives 404 Not Found status with the error message","match":{"location":"StepDefinition.Get_UserName.validate_404_response()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:34.162Z","before":[{"result":{"duration":999600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":44,"name":"Get User with Invalid Endpoint","description":"","id":"get-user-by-firstname-api---get-request-scenarios;get-user-with-invalid-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1395000,"status":"passed"},"line":45,"name":"User prepares GET request with BaseURL and invalid endpoint path","match":{"location":"StepDefinition.Get_UserName.prepare_get_with_invalid_endpoint()"},"keyword":"Given "},{"result":{"duration":391656900,"status":"passed"},"line":46,"name":"User sends GET request to wrong path","match":{"location":"StepDefinition.Get_UserName.send_get_to_invalid_path()"},"keyword":"When "},{"result":{"status":"passed"},"line":47,"name":"User receives 404 Not Found status with the error message","match":{"location":"StepDefinition.Get_UserName.validate_404_response()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:34.574Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":49,"name":"Get User without Authorization","description":"","id":"get-user-by-firstname-api---get-request-scenarios;get-user-without-authorization","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":50,"name":"User prepares GET request with BaseURL, valid endpoint, and existing user FirstName but without Authorization header","match":{"location":"StepDefinition.Get_UserName.prepare_get_request_without_auth()"},"keyword":"Given "},{"result":{"duration":292114900,"status":"passed"},"line":51,"name":"User sends GET request with existing user FirstName without Auth","match":{"location":"StepDefinition.Get_UserName.send_get_without_auth()"},"keyword":"When "},{"result":{"status":"passed"},"line":52,"name":"User received 401 Unauthorized status","match":{"location":"StepDefinition.Get_UserName.validate_401_response()"},"keyword":"Then "}]}],"name":"Get User by FirstName API - GET Request Scenarios","description":"","id":"get-user-by-firstname-api---get-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Get_Userfirstname.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:34.874Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Get User by Valid ID","description":"","id":"get-user-by-id-api---get-request-scenarios;get-user-by-valid-id","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":4,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":359690500,"status":"passed"},"line":5,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"duration":999300,"status":"passed"},"line":6,"name":"User receives 200 OK status with the user details in response","match":{"location":"StepDefinition.Get_USerID.validate_status_200()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:35.257Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Validate user_id in Response Matches Requested ID","description":"","id":"get-user-by-id-api---get-request-scenarios;validate-user-id-in-response-matches-requested-id","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":385216900,"status":"passed"},"line":10,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"duration":43690600,"status":"passed"},"line":11,"name":"Response body contains same user_id as requested","match":{"location":"StepDefinition.Get_USerID.validate_response_user_id_matches()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:35.701Z","before":[{"result":{"duration":981900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Validate Response Body Content-Type is JSON","description":"","id":"get-user-by-id-api---get-request-scenarios;validate-response-body-content-type-is-json","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":398014900,"status":"passed"},"line":15,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"status":"passed"},"line":16,"name":"the Response Content-Type is JSON with status code 200 OK","match":{"location":"StepDefinition.Get_USerID.validate_content_type_json()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:36.119Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Validate Required Fields in Response","description":"","id":"get-user-by-id-api---get-request-scenarios;validate-required-fields-in-response","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":369252800,"status":"passed"},"line":20,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"duration":254385700,"status":"passed"},"line":21,"name":"Response contains mandatory fields: user_id, UserfirstName, UserlastName, userContactNumber, userEmailId, creationTime, lastModTime, userAddress, addressId, plotNumber, street, state, country, zipCode","match":{"location":"StepDefinition.Get_USerID.validate_mandatory_fields()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:36.759Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Validate user_id is Integer Type","description":"","id":"get-user-by-id-api---get-request-scenarios;validate-user-id-is-integer-type","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":24,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":437443200,"status":"passed"},"line":25,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"duration":37640300,"status":"passed"},"line":26,"name":"the user_id in response is of integer type","match":{"location":"StepDefinition.Get_USerID.user_id_is_integer_type()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:37.249Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Validate address_id is integer type in response","description":"","id":"get-user-by-id-api---get-request-scenarios;validate-address-id-is-integer-type-in-response","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"User prepares GET request with BaseURL, valid endpoint, and valid user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_valid_id()"},"keyword":"Given "},{"result":{"duration":517204400,"status":"passed"},"line":30,"name":"User sends GET request with existing user ID","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_valid_id()"},"keyword":"When "},{"result":{"duration":16993400,"status":"passed"},"line":31,"name":"the address_id is of integer type","match":{"location":"StepDefinition.Get_USerID.address_id_is_integer_type()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:37.797Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Get User with Non-Existing ID","description":"","id":"get-user-by-id-api---get-request-scenarios;get-user-with-non-existing-id","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":34,"name":"User prepares GET request with BaseURL, valid endpoint, and non-existing user ID","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_non_existing_id()"},"keyword":"Given "},{"result":{"duration":380910300,"status":"passed"},"line":35,"name":"User sends GET request with non-existent ID","match":{"location":"StepDefinition.Get_USerID.send_get_with_non_existent_id()"},"keyword":"When "},{"result":{"duration":1012200,"status":"passed"},"line":36,"name":"User receives 404 Not Found status with an error message","match":{"location":"StepDefinition.Get_USerID.validate_404_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:38.194Z","before":[{"result":{"duration":998400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Get User with Invalid ID Format (e.g. string instead of integer)","description":"","id":"get-user-by-id-api---get-request-scenarios;get-user-with-invalid-id-format-(e.g.-string-instead-of-integer)","after":[{"result":{"duration":507500,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999100,"status":"passed"},"line":39,"name":"User prepares GET request with BaseURL, valid endpoint, and invalid user ID 'abc'","match":{"location":"StepDefinition.Get_USerID.prepare_get_request_with_invalid_id_string()"},"keyword":"Given "},{"result":{"duration":363946000,"status":"passed"},"line":40,"name":"User sends GET request with invalid ID 'abc'","match":{"location":"StepDefinition.Get_USerID.send_get_request_with_invalid_id_string()"},"keyword":"When "},{"result":{"duration":985300,"status":"passed"},"line":41,"name":"User receives 400 Bad Request status with an error message","match":{"location":"StepDefinition.Get_USerID.validate_400_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:38.577Z","before":[{"result":{"duration":1507200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Get User with Invalid Endpoint","description":"","id":"get-user-by-id-api---get-request-scenarios;get-user-with-invalid-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"User prepares GET request with the BaseURL and invalid endpoint path","match":{"location":"StepDefinition.Get_USerID.prepare_get_with_invalid_endpoint()"},"keyword":"Given "},{"result":{"duration":358316900,"status":"passed"},"line":45,"name":"User sends GET request to the wrong path","match":{"location":"StepDefinition.Get_USerID.send_get_to_wrong_endpoint()"},"keyword":"When "},{"result":{"duration":1507800,"status":"passed"},"line":46,"name":"User receives 404 Not Found status with an error message","match":{"location":"StepDefinition.Get_USerID.validate_404_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:38.952Z","before":[{"result":{"duration":996700,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":48,"name":"Get User without Authorization","description":"","id":"get-user-by-id-api---get-request-scenarios;get-user-without-authorization","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":49,"name":"User prepares GET request with valid BaseURL, valid endpoint, and existing user ID but without Authorization header","match":{"location":"StepDefinition.Get_USerID.prepare_get_without_auth()"},"keyword":"Given "},{"result":{"duration":281917100,"status":"passed"},"line":50,"name":"User sends GET request with existing user ID without Authorization","match":{"location":"StepDefinition.Get_USerID.send_get_without_auth()"},"keyword":"When "},{"result":{"status":"passed"},"line":51,"name":"User receives the 401 Unauthorized status","match":{"location":"StepDefinition.Get_USerID.validate_401_status()"},"keyword":"Then "}]}],"name":"Get User by ID API - GET Request Scenarios","description":"","id":"get-user-by-id-api---get-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Get_Userid.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:39.258Z","before":[{"result":{"duration":1009100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":4,"name":"Verify that user is able to update FirstName","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1508700,"status":"passed"},"line":5,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":396558800,"status":"passed"},"line":6,"name":"User creates Patch request with file \"patch_firstname.json\"","match":{"arguments":[{"val":"\"patch_firstname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":8568300,"status":"passed"},"line":7,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:39.678Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":9,"name":"Verify that user is able to update LastName","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-lastname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1005600,"status":"passed"},"line":10,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":497802800,"status":"passed"},"line":11,"name":"User creates Patch request with file \"patch_lastname.json\"","match":{"arguments":[{"val":"\"patch_lastname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":12,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:40.193Z","before":[{"result":{"duration":1511300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":14,"name":"Verify that user is able to update contact_number","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-contact-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":15,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":512548600,"status":"passed"},"line":16,"name":"User creates Patch request with file \"patch_contactnumber.json\"","match":{"arguments":[{"val":"\"patch_contactnumber.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":17,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:40.732Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":19,"name":"Verify that user is able to update email_id","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-email-id","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":20,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":601148100,"status":"passed"},"line":21,"name":"User creates Patch request with file \"patch_emailid.json\"","match":{"arguments":[{"val":"\"patch_emailid.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":22,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:41.345Z","before":[{"result":{"duration":1001000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":24,"name":"Verify that user is able to update plotNumber","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-plotnumber","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":25,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":351886600,"status":"passed"},"line":26,"name":"User creates Patch request with file \"patch_plotnumber.json\"","match":{"arguments":[{"val":"\"patch_plotnumber.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":27,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:41.711Z","before":[{"result":{"duration":14133900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":29,"name":"Verify that user is able to update Street","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-street","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":995600,"status":"passed"},"line":30,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":392887200,"status":"passed"},"line":31,"name":"User creates Patch request with file \"patch_street.json\"","match":{"arguments":[{"val":"\"patch_street.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1516300,"status":"passed"},"line":32,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:42.134Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":34,"name":"Verify that user is able to update state","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-state","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1044100,"status":"passed"},"line":35,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":350222000,"status":"passed"},"line":36,"name":"User creates Patch request with file \"patch_state.json\"","match":{"arguments":[{"val":"\"patch_state.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":37,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:42.502Z","before":[{"result":{"duration":2020300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":39,"name":"Verify that user is able to update Country","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-country","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2015500,"status":"passed"},"line":40,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":388146800,"status":"passed"},"line":41,"name":"User creates Patch request with file \"patch_country.json\"","match":{"arguments":[{"val":"\"patch_country.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":42,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:42.914Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":44,"name":"Verify that user is able to update zipCode","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-able-to-update-zipcode","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":45,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":398011000,"status":"passed"},"line":46,"name":"User creates Patch request with file \"patch_zipcode.json\"","match":{"arguments":[{"val":"\"patch_zipcode.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":47,"name":"User receives 200 status code","match":{"arguments":[{"val":"200","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:43.326Z","before":[{"result":{"duration":999200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":49,"name":"Verify that user is not able to update contact_number with Characters","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-contact-number-with-characters","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1524000,"status":"passed"},"line":50,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":349090600,"status":"passed"},"line":51,"name":"User creates Patch request with file \"patch_invalid_contactnumber.json\"","match":{"arguments":[{"val":"\"patch_invalid_contactnumber.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":52,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:43.692Z","before":[{"result":{"duration":2033800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":54,"name":"Verify that user is not able to update Invalid email_id","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-invalid-email-id","after":[{"result":{"duration":994700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":55,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":376229800,"status":"passed"},"line":56,"name":"User creates Patch request with file \"patch_invalid_email.json\"","match":{"arguments":[{"val":"\"patch_invalid_email.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":57,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:44.083Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":59,"name":"Verify that user is not able to update Invalid state with Numeric Data","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-invalid-state-with-numeric-data","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":60,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":381239100,"status":"passed"},"line":61,"name":"User creates Patch request with file \"patch_invalid_state.json\"","match":{"arguments":[{"val":"\"patch_invalid_state.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1000700,"status":"passed"},"line":62,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:44.479Z","before":[{"result":{"duration":999200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":64,"name":"Verify that user is not able to update Invalid Country with Numeric Data","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-invalid-country-with-numeric-data","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1513900,"status":"passed"},"line":65,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":426721200,"status":"passed"},"line":66,"name":"User creates Patch request with file \"patch_invalid_country.json\"","match":{"arguments":[{"val":"\"patch_invalid_country.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1008600,"status":"passed"},"line":67,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:44.919Z","before":[{"result":{"duration":1016800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":69,"name":"Verify that user is not able to update Invalid zipCode with Characters","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-invalid-zipcode-with-characters","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":70,"name":"Patch request with new data, BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithValidURLValidEndpoint()"},"keyword":"Given "},{"result":{"duration":353630000,"status":"passed"},"line":71,"name":"User creates Patch request with file \"patch_invalid_zipcode.json\"","match":{"arguments":[{"val":"\"patch_invalid_zipcode.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":72,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:45.282Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":74,"name":"Verify that user is not able to update FirstName with invalid BaseURL","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-firstname-with-invalid-baseurl","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":999400,"status":"passed"},"line":75,"name":"Patch request with new data, invalid BaseURL, valid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithInvalidBaseURL()"},"keyword":"Given "},{"result":{"duration":324129800,"status":"passed"},"line":76,"name":"User creates Patch request with file \"patch_firstname.json\"","match":{"arguments":[{"val":"\"patch_firstname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":77,"name":"User receives 404 status code","match":{"arguments":[{"val":"404","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:45.628Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":79,"name":"Verify that user is not able to update FirstName with valid BaseURL, Invalid EndPoint","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-firstname-with-valid-baseurl--invalid-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1511900,"status":"passed"},"line":80,"name":"Patch request with new data, valid BaseURL, invalid Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithInvalidEndpoint()"},"keyword":"Given "},{"result":{"duration":394383000,"status":"passed"},"line":81,"name":"User creates Patch request with file \"patch_firstname.json\"","match":{"arguments":[{"val":"\"patch_firstname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":82,"name":"User receives 400 status code","match":{"arguments":[{"val":"400","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:46.038Z","before":[{"result":{"duration":2522600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":84,"name":"Verify that user is not able to update FirstName with valid BaseURL, empty EndPoint","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-firstname-with-valid-baseurl--empty-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1510500,"status":"passed"},"line":85,"name":"Patch request with new data, valid BaseURL, empty Endpoint","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithEmptyEndpoint()"},"keyword":"Given "},{"result":{"duration":403829300,"status":"passed"},"line":86,"name":"User creates Patch request with file \"patch_firstname.json\"","match":{"arguments":[{"val":"\"patch_firstname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":511400,"status":"passed"},"line":87,"name":"User receives 404 status code","match":{"arguments":[{"val":"404","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:46.456Z","before":[{"result":{"duration":1017300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":89,"name":"Verify that user is not able to update FirstName with BaseURL, valid Endpoint and No Auth","description":"","id":"update-user-details-api---patch-request-scenarios;verify-that-user-is-not-able-to-update-firstname-with-baseurl--valid-endpoint-and-no-auth","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001000,"status":"passed"},"line":90,"name":"Patch request with new data, valid BaseURL, valid Endpoint and No Auth","match":{"location":"StepDefinition.Patch_Userid.patchRequestWithNoAuth()"},"keyword":"Given "},{"result":{"duration":357298100,"status":"passed"},"line":91,"name":"User creates Patch request with file \"patch_firstname.json\"","match":{"arguments":[{"val":"\"patch_firstname.json\"","offset":37}],"location":"StepDefinition.Patch_Userid.sendPatchRequestWithFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":998600,"status":"passed"},"line":92,"name":"User receives 401 status code","match":{"arguments":[{"val":"401","offset":14}],"location":"StepDefinition.Patch_Userid.validateResponseStatusCode(int)"},"keyword":"Then "}]}],"name":"Update User Details API - PATCH Request Scenarios","description":"","id":"update-user-details-api---patch-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Patch_Userid.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:46.831Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Add a new user without Authorization","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-without-authorization","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1007900,"status":"passed"},"line":4,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":295033900,"status":"passed"},"line":5,"name":"Users sends the POST request with all mandatory fields but without Authorization","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendPostWithoutAuth()"},"keyword":"When "},{"result":{"status":"passed"},"line":6,"name":"Users receives 401 Unauthorized status","match":{"location":"StepDefinition.PostNegative_CreateUsers.users_receives_401_unauthorized_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:47.138Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Add a new user with invalid BaseURL","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-invalid-baseurl","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"User prepares the POST request with invalid BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareRequestWithInvalidBaseURL()"},"keyword":"Given "},{"result":{"duration":282918400,"status":"passed"},"line":10,"name":"User sends the POST request with all required user details","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_sends_post_request_with_required_details()"},"keyword":"When "},{"result":{"duration":3016600,"status":"passed"},"line":11,"name":"User receives 404 Not Found status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_404_not_found_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:47.436Z","before":[{"result":{"duration":1012700,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Add a new user with invalid endpoint","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-invalid-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"User prepares the POST request with BaseURL and invalid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareRequestWithInvalidEndpoint()"},"keyword":"Given "},{"result":{"duration":399266700,"status":"passed"},"line":15,"name":"User sends the POST request with all required user details","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_sends_post_request_with_required_details()"},"keyword":"When "},{"result":{"duration":1008600,"status":"passed"},"line":16,"name":"User receives 404 Not Found status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_404_not_found_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:47.845Z","before":[{"result":{"duration":1013200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Add a new user with empty endpoint","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-empty-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"User prepares the POST request with BaseURL and empty endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareRequestWithEmptyEndpoint()"},"keyword":"Given "},{"result":{"duration":429837900,"status":"passed"},"line":20,"name":"User sends the POST request with all required user details","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_sends_post_request_with_required_details()"},"keyword":"When "},{"result":{"status":"passed"},"line":21,"name":"User receives 404 Not Found status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_404_not_found_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:48.281Z","before":[{"result":{"duration":2015100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Add a new user with empty request body","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-empty-request-body","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":24,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":368811800,"status":"passed"},"line":25,"name":"User sends the POST request with an empty request body","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendEmptyRequestBody()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [400] but found [500]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message(PostNegative_CreateUsers.java:186)\r\n\tat âœ½.User receives 400 Bad Request status with appropriate message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Post_Negative.feature:26)\r\n","duration":643400,"status":"failed"},"line":26,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:48.664Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Add a new user with only optional fields","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-only-optional-fields","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":365614600,"status":"passed"},"line":30,"name":"Users sends the POST request without only mandatory fields","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendOnlyOptionalFields()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [400] but found [500]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\r\n\tat StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message(PostNegative_CreateUsers.java:186)\r\n\tat âœ½.User receives 400 Bad Request status with appropriate message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Post_Negative.feature:31)\r\n","duration":1179600,"status":"failed"},"line":31,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:49.040Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Add a new user with existing email and contact","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-existing-email-and-contact","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1510800,"status":"passed"},"line":34,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":438139500,"status":"passed"},"line":35,"name":"Users sends the POST request with existing email and contact number","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendDuplicateEmailAndContact()"},"keyword":"When "},{"result":{"duration":13857600,"status":"passed"},"line":36,"name":"User receives 409 Conflict status for existing entry","match":{"location":"StepDefinition.PostNegative_CreateUsers.validate409ConflictResponse()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:49.503Z","before":[{"result":{"duration":2022400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Add a new user with invalid first name","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-invalid-first-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":39,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":401380700,"status":"passed"},"line":40,"name":"User sends the POST request with invalid first name","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendInvalidFirstName()"},"keyword":"When "},{"result":{"duration":1002900,"status":"passed"},"line":41,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:49.915Z","before":[{"result":{"duration":515900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Add a new user with invalid last name","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-invalid-last-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"error_message":"java.lang.RuntimeException: JSON object is null. Check the file path or contents.\r\n\tat StepDefinition.PostNegative_CreateUsers.sendRequest(PostNegative_CreateUsers.java:193)\r\n\tat StepDefinition.PostNegative_CreateUsers.sendInvalidLastName(PostNegative_CreateUsers.java:92)\r\n\tat âœ½.User sends the POST request with invalid last name(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Post_Negative.feature:45)\r\n","duration":14282200,"status":"failed"},"line":45,"name":"User sends the POST request with invalid last name","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendInvalidLastName()"},"keyword":"When "},{"result":{"status":"skipped"},"line":46,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:49.945Z","before":[{"result":{"duration":1006900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":48,"name":"Add a new user with special characters in contact number","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-special-characters-in-contact-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":49,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"error_message":"java.lang.RuntimeException: JSON object is null. Check the file path or contents.\r\n\tat StepDefinition.PostNegative_CreateUsers.sendRequest(PostNegative_CreateUsers.java:193)\r\n\tat StepDefinition.PostNegative_CreateUsers.sendSpecialCharInContact(PostNegative_CreateUsers.java:100)\r\n\tat âœ½.User sends the POST request with special characters in contact number(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Post_Negative.feature:50)\r\n","duration":1968400,"status":"failed"},"line":50,"name":"User sends the POST request with special characters in contact number","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendSpecialCharInContact()"},"keyword":"When "},{"result":{"status":"skipped"},"line":51,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:49.952Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":53,"name":"Add a new user with contact number less than 10 digits","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-contact-number-less-than-10-digits","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":54,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":435980700,"status":"passed"},"line":55,"name":"User sends the POST request with less than 10 digits in contact number","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendShortContact()"},"keyword":"When "},{"result":{"duration":2001400,"status":"passed"},"line":56,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:50.396Z","before":[{"result":{"duration":507400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":58,"name":"Add a new user with contact number more than 10 digits","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-contact-number-more-than-10-digits","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":59,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":427037400,"status":"passed"},"line":60,"name":"User sends the POST request with more than 10 digits in contact number","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendLongContact()"},"keyword":"When "},{"result":{"status":"passed"},"line":61,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:50.829Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":63,"name":"Add a new user with integer plot number","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-integer-plot-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":64,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":346252100,"status":"passed"},"line":65,"name":"User sends the POST request with numeric plot number","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendNumericPlot()"},"keyword":"When "},{"result":{"duration":999600,"status":"passed"},"line":66,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:51.187Z","before":[{"result":{"duration":999900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":68,"name":"Add a new user with special characters in street name","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-special-characters-in-street-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":69,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":387406200,"status":"passed"},"line":70,"name":"User sends the POST request with special characters in street name","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendSpecialStreet()"},"keyword":"When "},{"result":{"duration":997500,"status":"passed"},"line":71,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:51.585Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":73,"name":"Add a new user with numeric state value","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-numeric-state-value","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1408200,"status":"passed"},"line":74,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":454313800,"status":"passed"},"line":75,"name":"User sends the POST request with numeric value in state","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendNumericState()"},"keyword":"When "},{"result":{"status":"passed"},"line":76,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:52.047Z","before":[{"result":{"duration":920200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":78,"name":"Add a new user with numeric country value","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-numeric-country-value","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":79,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":454899200,"status":"passed"},"line":80,"name":"User sends the POST request with numeric value in country","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendNumericCountry()"},"keyword":"When "},{"result":{"status":"passed"},"line":81,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:52.509Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":83,"name":"Add a new user with special characters in zip code","description":"","id":"add-new-user-api---negative-scenarios;add-a-new-user-with-special-characters-in-zip-code","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":84,"name":"Users prepare the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostNegative_CreateUsers.prepareValidPostRequest()"},"keyword":"Given "},{"result":{"duration":441297300,"status":"passed"},"line":85,"name":"User sends the POST request with special characters in zip code","match":{"location":"StepDefinition.PostNegative_CreateUsers.sendSpecialZip()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertTrue(Assert.java:57)\r\n\tat org.testng.Assert.assertTrue(Assert.java:67)\r\n\tat StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message(PostNegative_CreateUsers.java:187)\r\n\tat âœ½.User receives 400 Bad Request status with appropriate message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Post_Negative.feature:86)\r\n","duration":1014100,"status":"failed"},"line":86,"name":"User receives 400 Bad Request status with appropriate message","match":{"location":"StepDefinition.PostNegative_CreateUsers.user_receives_400_bad_request_status_with_appropriate_message()"},"keyword":"Then "}]}],"name":"Add New User API - Negative Scenarios","description":"","id":"add-new-user-api---negative-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Post_Negative.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:07:52.961Z","before":[{"result":{"duration":1017100,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Update user details with valid BaseURL and valid Endpoints","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-baseurl-and-valid-endpoints","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000300,"status":"passed"},"line":4,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":378174400,"status":"passed"},"line":5,"name":"User sends PUT request with JSON file \"update_valid_all_fields.json\"","match":{"arguments":[{"val":"\"update_valid_all_fields.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1013600,"status":"passed"},"line":6,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:53.365Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"UPDATE user details with no request body","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-no-request-body","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":994700,"status":"passed"},"line":9,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":405816400,"status":"passed"},"line":10,"name":"User sends PUT request without request body","match":{"location":"StepDefinition.Put_UserId.sendPutRequestWithoutBody()"},"keyword":"When "},{"result":{"duration":1092700,"status":"passed"},"line":11,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:53.779Z","before":[{"result":{"duration":1002700,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"UPDATE user details with duplicate contact number","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-duplicate-contact-number","after":[{"result":{"duration":994700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":395931300,"status":"passed"},"line":15,"name":"User sends PUT request with JSON file \"update_duplicate_contact.json\"","match":{"arguments":[{"val":"\"update_duplicate_contact.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected status code 409 but got 200 expected [409] but found [200]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat StepDefinition.Put_UserId.validateStatusCode(Put_UserId.java:90)\r\n\tat âœ½.User should receive status code 409(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Put_userid.feature:16)\r\n","duration":1999500,"status":"failed"},"line":16,"name":"User should receive status code 409","match":{"arguments":[{"val":"409","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:54.195Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Update user details with less than ten digits contact number","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-less-than-ten-digits-contact-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":508500,"status":"passed"},"line":19,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":428799000,"status":"passed"},"line":20,"name":"User sends PUT request with JSON file \"invalid_short_contact.json\"","match":{"arguments":[{"val":"\"invalid_short_contact.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":994000,"status":"passed"},"line":21,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:54.639Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"UPDATE user details with duplicate email ID","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-duplicate-email-id","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000000,"status":"passed"},"line":24,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":390497700,"status":"passed"},"line":25,"name":"User sends PUT request with JSON file \"duplicate_email.json\"","match":{"arguments":[{"val":"\"duplicate_email.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected status code 409 but got 200 expected [409] but found [200]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat StepDefinition.Put_UserId.validateStatusCode(Put_UserId.java:90)\r\n\tat âœ½.User should receive status code 409(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Put_userid.feature:26)\r\n","duration":2006100,"status":"failed"},"line":26,"name":"User should receive status code 409","match":{"arguments":[{"val":"409","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:55.046Z","before":[{"result":{"duration":1095000,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"UPDATE user detail with invalid emailID","description":"","id":"update-user-details-api---put-request-scenarios;update-user-detail-with-invalid-emailid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":924000,"status":"passed"},"line":29,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":394266800,"status":"passed"},"line":30,"name":"User sends PUT request with JSON file \"invalid_email.json\"","match":{"arguments":[{"val":"\"invalid_email.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":31,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:55.452Z","before":[{"result":{"duration":823200,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"UPDATE user details with invalid plot number","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-plot-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":34,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":385489700,"status":"passed"},"line":35,"name":"User sends PUT request with JSON file \"invalid_plotnumber.json\"","match":{"arguments":[{"val":"\"invalid_plotnumber.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":36,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:55.848Z","before":[{"result":{"duration":619900,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"UPDATE user details with valid new plot number","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-new-plot-number","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2054400,"status":"passed"},"line":39,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":381414300,"status":"passed"},"line":40,"name":"User sends PUT request with JSON file \"valid_plotnumber.json\"","match":{"arguments":[{"val":"\"valid_plotnumber.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":41,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:56.243Z","before":[{"result":{"duration":1006700,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"UPDATE user details with invalid new street name","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-new-street-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":521313700,"status":"passed"},"line":45,"name":"User sends PUT request with JSON file \"invalid_street.json\"","match":{"arguments":[{"val":"\"invalid_street.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1509900,"status":"passed"},"line":46,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:56.775Z","before":[{"result":{"duration":1011500,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":48,"name":"UPDATE user details with valid new street name","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-new-street-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":49,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":573680800,"status":"passed"},"line":50,"name":"User sends PUT request with JSON file \"valid_street.json\"","match":{"arguments":[{"val":"\"valid_street.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":51,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:57.355Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":53,"name":"UPDATE user details with invalid country name","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-country-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":507700,"status":"passed"},"line":54,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":377863100,"status":"passed"},"line":55,"name":"User sends PUT request with JSON file \"invalid_country.json\"","match":{"arguments":[{"val":"\"invalid_country.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1010700,"status":"passed"},"line":56,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:57.742Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":58,"name":"UPDATE user details with valid new country name","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-new-country-name","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":59,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":374327600,"status":"passed"},"line":60,"name":"User sends PUT request with JSON file \"valid_country.json\"","match":{"arguments":[{"val":"\"valid_country.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":61,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:58.124Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":63,"name":"UPDATE user details with invalid zipcode","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-zipcode","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":64,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":477627300,"status":"passed"},"line":65,"name":"User sends PUT request with JSON file \"invalid_zipcode.json\"","match":{"arguments":[{"val":"\"invalid_zipcode.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1516100,"status":"passed"},"line":66,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:58.611Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":68,"name":"UPDATE user details with valid new zipcode","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-new-zipcode","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":69,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":433303100,"status":"passed"},"line":70,"name":"User sends PUT request with JSON file \"valid_zipcode.json\"","match":{"arguments":[{"val":"\"valid_zipcode.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":71,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:59.057Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":73,"name":"UPDATE user details with invalid firstname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-firstname","after":[{"result":{"duration":1007100,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1470800,"status":"passed"},"line":74,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":401459700,"status":"passed"},"line":75,"name":"User sends PUT request with JSON file \"invalid_firstname.json\"","match":{"arguments":[{"val":"\"invalid_firstname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":76,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:07:59.464Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":78,"name":"UPDATE user details with valid firstname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001500,"status":"passed"},"line":79,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":568045800,"status":"passed"},"line":80,"name":"User sends PUT request with JSON file \"valid_firstname.json\"","match":{"arguments":[{"val":"\"valid_firstname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":81,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:00.039Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":83,"name":"UPDATE user details with invalid lastname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-lastname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":84,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":467424600,"status":"passed"},"line":85,"name":"User sends PUT request with JSON file \"invalid_lastname.json\"","match":{"arguments":[{"val":"\"invalid_lastname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1003100,"status":"passed"},"line":86,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:00.512Z","before":[{"result":{"duration":507800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":88,"name":"UPDATE user details with valid lastname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-valid-lastname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":526900,"status":"passed"},"line":89,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":483605300,"status":"passed"},"line":90,"name":"User sends PUT request with JSON file \"valid_lastname.json\"","match":{"arguments":[{"val":"\"valid_lastname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":91,"name":"User should receive status code 200","match":{"arguments":[{"val":"200","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:01.001Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":93,"name":"UPDATE user details with empty contact number","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-contact-number","after":[{"result":{"duration":1001300,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":94,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":453285000,"status":"passed"},"line":95,"name":"User sends PUT request with JSON file \"empty_contact.json\"","match":{"arguments":[{"val":"\"empty_contact.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":96,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:01.464Z","before":[{"result":{"duration":1511600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":98,"name":"UPDATE user details with empty emailID","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-emailid","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1012700,"status":"passed"},"line":99,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":461677700,"status":"passed"},"line":100,"name":"User sends PUT request with JSON file \"empty_email.json\"","match":{"arguments":[{"val":"\"empty_email.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":101,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:01.935Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":103,"name":"UPDATE user details with empty firstname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-firstname","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":104,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":473073400,"status":"passed"},"line":105,"name":"User sends PUT request with JSON file \"empty_firstname.json\"","match":{"arguments":[{"val":"\"empty_firstname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1507400,"status":"passed"},"line":106,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:02.417Z","before":[{"result":{"duration":1003500,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":108,"name":"UPDATE user details with empty lastname","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-lastname","after":[{"result":{"duration":1014700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":510700,"status":"passed"},"line":109,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":397522800,"status":"passed"},"line":110,"name":"User sends PUT request with JSON file \"empty_lastname.json\"","match":{"arguments":[{"val":"\"empty_lastname.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":111,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:02.830Z","before":[{"result":{"duration":1512400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":113,"name":"UPDATE user details with empty plotnumber","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-plotnumber","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":114,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":371213700,"status":"passed"},"line":115,"name":"User sends PUT request with JSON file \"empty_plotnumber.json\"","match":{"arguments":[{"val":"\"empty_plotnumber.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":116,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:03.216Z","before":[{"result":{"duration":1000500,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":118,"name":"UPDATE user details with empty street","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-street","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":512400,"status":"passed"},"line":119,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":382676200,"status":"passed"},"line":120,"name":"User sends PUT request with JSON file \"empty_street.json\"","match":{"arguments":[{"val":"\"empty_street.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":121,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:03.609Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":123,"name":"UPDATE user details with empty country","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-country","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":124,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":505592800,"status":"passed"},"line":125,"name":"User sends PUT request with JSON file \"empty_country.json\"","match":{"arguments":[{"val":"\"empty_country.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":991600,"status":"passed"},"line":126,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:04.129Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":128,"name":"UPDATE user details with empty zipcode","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-zipcode","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1524100,"status":"passed"},"line":129,"name":"User prepares PUT request with authorization and valid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithAuthValidURL()"},"keyword":"Given "},{"result":{"duration":379839700,"status":"passed"},"line":130,"name":"User sends PUT request with JSON file \"empty_zipcode.json\"","match":{"arguments":[{"val":"\"empty_zipcode.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":131,"name":"User should receive status code 400","match":{"arguments":[{"val":"400","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:04.519Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":133,"name":"UPDATE user details with invalid BaseURL","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-baseurl","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1505200,"status":"passed"},"line":134,"name":"User prepares PUT request with authorization and invalid BaseURL and valid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithInvalidBaseURL()"},"keyword":"Given "},{"result":{"duration":310411400,"status":"passed"},"line":135,"name":"User sends PUT request with JSON file \"update_valid_all_fields.json\"","match":{"arguments":[{"val":"\"update_valid_all_fields.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":507600,"status":"passed"},"line":136,"name":"User should receive status code 404","match":{"arguments":[{"val":"404","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:04.834Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":138,"name":"UPDATE user details with invalid endpoint","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-invalid-endpoint","after":[{"result":{"duration":509700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1000900,"status":"passed"},"line":139,"name":"User prepares PUT request with authorization and valid BaseURL and invalid Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithInvalidEndpoint()"},"keyword":"Given "},{"result":{"duration":374757800,"status":"passed"},"line":140,"name":"User sends PUT request with JSON file \"update_valid_all_fields.json\"","match":{"arguments":[{"val":"\"update_valid_all_fields.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected status code 404 but got 400 expected [404] but found [400]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat StepDefinition.Put_UserId.validateStatusCode(Put_UserId.java:90)\r\n\tat âœ½.User should receive status code 404(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/Put_userid.feature:141)\r\n","duration":1001400,"status":"failed"},"line":141,"name":"User should receive status code 404","match":{"arguments":[{"val":"404","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:05.218Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":143,"name":"UPDATE user details with empty endpoint","description":"","id":"update-user-details-api---put-request-scenarios;update-user-details-with-empty-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1008500,"status":"passed"},"line":144,"name":"User prepares PUT request with authorization and valid BaseURL and empty Endpoint","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithEmptyEndpoint()"},"keyword":"Given "},{"result":{"duration":484261000,"status":"passed"},"line":145,"name":"User sends PUT request with JSON file \"update_valid_all_fields.json\"","match":{"arguments":[{"val":"\"update_valid_all_fields.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"duration":1001800,"status":"passed"},"line":146,"name":"User should receive status code 404","match":{"arguments":[{"val":"404","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:05.709Z","before":[{"result":{"duration":1030800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":148,"name":"Add a New User with all fields without Authorization","description":"","id":"update-user-details-api---put-request-scenarios;add-a-new-user-with-all-fields-without-authorization","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":149,"name":"User prepares PUT request with valid BaseURL and valid Endpoint without Auth","match":{"location":"StepDefinition.Put_UserId.preparePutRequestWithoutAuthorization()"},"keyword":"Given "},{"result":{"duration":298754700,"status":"passed"},"line":150,"name":"User sends PUT request with JSON file \"update_valid_all_fields.json\"","match":{"arguments":[{"val":"\"update_valid_all_fields.json\"","offset":38}],"location":"StepDefinition.Put_UserId.sendPutRequestWithJsonFile(java.lang.String)"},"keyword":"When "},{"result":{"status":"passed"},"line":151,"name":"User should receive status code 401","match":{"arguments":[{"val":"401","offset":32}],"location":"StepDefinition.Put_UserId.validateStatusCode(int)"},"keyword":"Then "}]}],"name":"Update User Details API - PUT Request Scenarios","description":"","id":"update-user-details-api---put-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/Put_userid.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:08:06.022Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Get All Users with Valid Base URL and Endpoint","description":"","id":"get-all-users-api---get-request-scenarios;get-all-users-with-valid-base-url-and-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":4,"name":"User prepares the GET request with valid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_get_all_users_valid_request()"},"keyword":"Given "},{"result":{"duration":1853381600,"status":"passed"},"line":5,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"duration":134313200,"status":"passed"},"line":6,"name":"User receives 200 OK status with list of users","match":{"location":"StepDefinition.Get_Users.validate_200_status_and_users_list()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:08.016Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Validate Response Body Content-Type is JSON","description":"","id":"get-all-users-api---get-request-scenarios;validate-response-body-content-type-is-json","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"User prepares the GET request with valid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_get_all_users_valid_request()"},"keyword":"Given "},{"result":{"duration":1968140800,"status":"passed"},"line":10,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"status":"passed"},"line":11,"name":"Response Content-Type is JSON with the status code 200 OK","match":{"location":"StepDefinition.Get_Users.validate_content_type_json()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:09.989Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Validate Response Contains Required Fields","description":"","id":"get-all-users-api---get-request-scenarios;validate-response-contains-required-fields","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"User prepares the GET request with valid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_get_all_users_valid_request()"},"keyword":"Given "},{"result":{"duration":1690028300,"status":"passed"},"line":15,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"duration":121259300,"status":"passed"},"line":16,"name":"Response contains user fields: user_id, UserfirstName, UserlastName, userContactNumber, userEmailId, creationTime, lastModTime, userAddress, addressId, plotNumber, street, state, country, zipCode","match":{"location":"StepDefinition.Get_Users.validate_user_fields_in_response()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:11.805Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Validate user_id is integer type in response","description":"","id":"get-all-users-api---get-request-scenarios;validate-user-id-is-integer-type-in-response","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":19,"name":"User prepares the GET request with valid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_get_all_users_valid_request()"},"keyword":"Given "},{"result":{"duration":1565463100,"status":"passed"},"line":20,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertTrue(Assert.java:57)\r\n\tat org.testng.Assert.assertTrue(Assert.java:67)\r\n\tat StepDefinition.Get_Users.validate_user_id_type_integer(Get_Users.java:86)\r\n\tat âœ½.user_id is of integer type with the status code 200 OK(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/get.allusers.feature:21)\r\n","duration":99847200,"status":"failed"},"line":21,"name":"user_id is of integer type with the status code 200 OK","match":{"location":"StepDefinition.Get_Users.validate_user_id_type_integer()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:13.477Z","before":[{"result":{"duration":1512600,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Validate address_id is integer type in response","description":"","id":"get-all-users-api---get-request-scenarios;validate-address-id-is-integer-type-in-response","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":24,"name":"User prepares the GET request with valid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_get_all_users_valid_request()"},"keyword":"Given "},{"result":{"duration":1444429800,"status":"passed"},"line":25,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: addressId should be a number expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertTrue(Assert.java:57)\r\n\tat StepDefinition.Get_Users.validate_address_id_type_integer(Get_Users.java:93)\r\n\tat âœ½.address_id is of integer type with the status code 200 OK(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/get.allusers.feature:26)\r\n","duration":106232700,"status":"failed"},"line":26,"name":"address_id is of integer type with the status code 200 OK","match":{"location":"StepDefinition.Get_Users.validate_address_id_type_integer()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:15.034Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Get Users with Invalid Endpoint","description":"","id":"get-all-users-api---get-request-scenarios;get-users-with-invalid-endpoint","after":[{"result":{"duration":1235400,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"User prepares the GET request with valid BaseURL and invalid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_request_with_invalid_endpoint()"},"keyword":"Given "},{"result":{"duration":393867000,"status":"passed"},"line":30,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"status":"passed"},"line":31,"name":"User receives 404 Not Found status","match":{"location":"StepDefinition.Get_Users.validate_404_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:15.433Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Get Users with Empty Endpoint","description":"","id":"get-all-users-api---get-request-scenarios;get-users-with-empty-endpoint","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":34,"name":"User prepares the GET request with valid BaseURL and empty endpoint","match":{"location":"StepDefinition.Get_Users.prepare_request_with_empty_endpoint()"},"keyword":"Given "},{"result":{"duration":362476200,"status":"passed"},"line":35,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"duration":1001600,"status":"passed"},"line":36,"name":"User receives 404 Not Found status","match":{"location":"StepDefinition.Get_Users.validate_404_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:15.803Z","before":[{"result":{"duration":524500,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Get USERS without Authorization and receives 401","description":"","id":"get-all-users-api---get-request-scenarios;get-users-without-authorization-and-receives-401","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":39,"name":"User prepares the GET request without Authorization header","match":{"location":"StepDefinition.Get_Users.prepare_request_without_auth()"},"keyword":"Given "},{"result":{"duration":279897400,"status":"passed"},"line":40,"name":"User sends GET request to fetch users without Auth","match":{"location":"StepDefinition.Get_Users.send_get_users_without_auth()"},"keyword":"When "},{"result":{"duration":1010500,"status":"passed"},"line":41,"name":"User receives 401 Unauthorized status","match":{"location":"StepDefinition.Get_Users.validate_401_status()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:16.089Z","before":[{"result":{"duration":1534300,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Get Users with Invalid Base URL","description":"","id":"get-all-users-api---get-request-scenarios;get-users-with-invalid-base-url","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"User prepares the GET request with invalid BaseURL and valid endpoint","match":{"location":"StepDefinition.Get_Users.prepare_request_with_invalid_baseurl()"},"keyword":"Given "},{"result":{"duration":269143200,"status":"passed"},"line":45,"name":"User sends GET request to fetch users","match":{"location":"StepDefinition.Get_Users.send_get_all_users_request()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: expected [true] but found [false]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertTrue(Assert.java:57)\r\n\tat org.testng.Assert.assertTrue(Assert.java:67)\r\n\tat StepDefinition.Get_Users.validate_404_with_invalid_baseurl(Get_Users.java:142)\r\n\tat âœ½.User receives 404 Not Found status with error message(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/get.allusers.feature:46)\r\n","duration":1012200,"status":"failed"},"line":46,"name":"User receives 404 Not Found status with error message","match":{"location":"StepDefinition.Get_Users.validate_404_with_invalid_baseurl()"},"keyword":"Then "}]}],"name":"Get All Users API - GET Request Scenarios","description":"","id":"get-all-users-api---get-request-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/get.allusers.feature","tags":[]},{"line":1,"elements":[{"start_timestamp":"2025-06-13T18:08:16.369Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":3,"name":"Add a new user with all mandatory and optional fields","description":"","id":"add-new-user-api---positive-scenarios;add-a-new-user-with-all-mandatory-and-optional-fields","after":[{"result":{"duration":361950100,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":4,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":390986400,"status":"passed"},"line":5,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":36884200,"status":"passed"},"line":6,"name":"User receives 201 Created status with matching fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.validateResponsefields()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:17.168Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":8,"name":"Add a new user with only mandatory fields","description":"","id":"add-new-user-api---positive-scenarios;add-a-new-user-with-only-mandatory-fields","after":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":9,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":495809700,"status":"passed"},"line":10,"name":"User sends the POST request with only mandatory fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_sends_the_post_request_with_only_mandatory_fields()"},"keyword":"When "},{"result":{"error_message":"java.lang.AssertionError: Expected status code 201 but got 500 expected [201] but found [500]\r\n\tat org.testng.Assert.fail(Assert.java:111)\r\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\r\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\r\n\tat org.testng.Assert.assertEquals(Assert.java:132)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\r\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\r\n\tat StepDefinition.PostPositive_CreateUsers.validateResponse(PostPositive_CreateUsers.java:112)\r\n\tat âœ½.User receives 201 Created status(file:///C:/Users/chand/eclipse-workspace/API_RESTASSURED/src/test/resources/Features/post_positive.feature:11)\r\n","duration":1001300,"status":"failed"},"line":11,"name":"User receives 201 Created status","match":{"location":"StepDefinition.PostPositive_CreateUsers.validateResponse()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:17.671Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":13,"name":"Validate autogenerated user_id in response","description":"","id":"add-new-user-api---positive-scenarios;validate-autogenerated-user-id-in-response","after":[{"result":{"duration":389559000,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":14,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":397074400,"status":"passed"},"line":15,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":7812200,"status":"passed"},"line":16,"name":"User sees autogenerated user_id in the response body","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_sees_autogenerated_user_id_in_the_response_body()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:18.473Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":18,"name":"Validate autogenerated addressID in response","description":"","id":"add-new-user-api---positive-scenarios;validate-autogenerated-addressid-in-response","after":[{"result":{"duration":340115600,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1012500,"status":"passed"},"line":19,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":375512100,"status":"passed"},"line":20,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":13839800,"status":"passed"},"line":21,"name":"User sees autogenerated addressID in the response body","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_sees_autogenerated_address_id_in_the_response_body()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:19.262Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":23,"name":"Validate Content-Type is application/json in response","description":"","id":"add-new-user-api---positive-scenarios;validate-content-type-is-application/json-in-response","after":[{"result":{"duration":683678300,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1140600,"status":"passed"},"line":24,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":385348500,"status":"passed"},"line":25,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"status":"undefined"},"line":26,"name":"User receives Content-Type as application/json with status code 201","match":{},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:20.350Z","before":[{"result":{"duration":1511400,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":28,"name":"Validate response status code is 201","description":"","id":"add-new-user-api---positive-scenarios;validate-response-status-code-is-201","after":[{"result":{"duration":369918400,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":29,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":369666500,"status":"passed"},"line":30,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":1516300,"status":"passed"},"line":31,"name":"User receives status code 201","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_receives_status_code_201()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:21.118Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":33,"name":"Validate response status text is Created","description":"","id":"add-new-user-api---positive-scenarios;validate-response-status-text-is-created","after":[{"result":{"duration":352265700,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1365700,"status":"passed"},"line":34,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":379040300,"status":"passed"},"line":35,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"status":"passed"},"line":36,"name":"User receives status text as Created","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_receives_status_text_created()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:21.872Z","before":[{"result":{"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":38,"name":"Validate user_id is integer in response","description":"","id":"add-new-user-api---positive-scenarios;validate-user-id-is-integer-in-response","after":[{"result":{"duration":345865600,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1001300,"status":"passed"},"line":39,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":385861000,"status":"passed"},"line":40,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":12731900,"status":"passed"},"line":41,"name":"User sees user_id is of integer type with status 201","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_sees_user_id_is_integer_with_status_201()"},"keyword":"Then "}]},{"start_timestamp":"2025-06-13T18:08:22.631Z","before":[{"result":{"duration":1294800,"status":"passed"},"match":{"location":"hooks.Hooks.setup()"}}],"line":43,"name":"Validate addressID is integer in response","description":"","id":"add-new-user-api---positive-scenarios;validate-addressid-is-integer-in-response","after":[{"result":{"duration":354044500,"status":"passed"},"match":{"location":"hooks.Hooks.cleanUpCreatedUser()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"status":"passed"},"line":44,"name":"User prepares the POST request with BaseURL and valid endpoint","match":{"location":"StepDefinition.PostPositive_CreateUsers.preparePostRequest()"},"keyword":"Given "},{"result":{"duration":352813300,"status":"passed"},"line":45,"name":"User sends the POST request with all required and optional fields","match":{"location":"StepDefinition.PostPositive_CreateUsers.sendPostRequest()"},"keyword":"When "},{"result":{"duration":10906800,"status":"passed"},"line":46,"name":"User sees addressID is of integer type with status 201","match":{"location":"StepDefinition.PostPositive_CreateUsers.user_sees_address_id_is_integer_with_status_201()"},"keyword":"Then "}]}],"name":"Add New User API - Positive Scenarios","description":"","id":"add-new-user-api---positive-scenarios","keyword":"Feature","uri":"file:src/test/resources/Features/post_positive.feature","tags":[]}]